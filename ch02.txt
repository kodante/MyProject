


p138
snippets 을 사용해서
rcc rsfc 등등 사용해본다.

p


impor 할때 node_modules 아래부터 해야한다.

p150
jsx 가 babel 과의 관계는?

p154
tip : map 설명
화살표함수
map 에서 item.no와 index 의 차이?

p157
<react.Fragment>
react 16에서부터

p159 속성  props
부모 -> 자식 로 속성 전달
자식에서 부모 데이터를 변경하려고 하면 안된다. 변경하지 않는다!
props 자체는 read only 이나, 가져온 객체의 참조를 통해 변경할 수 있으나.. 그러면 안된다.
* 크롬디버거에서 react 탭에서 변수를 추적할 수 있다.

함수형 클래스는 인자로 받는다
클래스형은 this.props 로 부모가 보낸 인자를 받는다

p167
전개연산자 spread operator
var obj = [1, 2, 3];
var obj2 = [111, ...ojb, 999 ]
obj2 === obj false

props 로 객체를 전달하는 것 보다, spread operator 를 통해 각 값을 넘겨서 아예 수정하지 못하도록 한다.

p170 상태
container component
presentation 

p171
상태는 생성자를 통해 만든다.
상태 변경은 setState() 메서드를 이용해야한다 -> rerender가 안일어난다.

p182
kebob casing => background-color ; 주로 대소문자를 구별하지 않는 환경
camelCasing => backgroundColor

tip : reactNative는 class css 를지원하지 않아서 inline 으로 해야함


sass 
node-sass sass --> css
변수사용, 중첩 구조

-----------------------------------
rccp
rscp

-------------------
p197
PropTypes
유효성 검증
import PropTypes from 'prop-types';

컴포넌트 설계는.... p201 (중요)


p203 이벤트 처리

*주의.. this 가 문제가 된다. 그래서 bind 를 써야한다.. 귀찮으면 생성자에 등록해서 써라.. --> 화살표 함수로 걍 해라
this.add = this.add.bind(this);

제어 컴포넌트
비제어 컴포넌트 ==> ref 를 사용한다.. 잘 이해 안감

ㅔ218
불변성.. => 최적화에 사용한다., redux 에서 사용한다.+
헬퍼 : immutability-helper (like mongoDB)
       immutable.js
       --> immer.js

import produce from "immer";
let quiz2 = produce(quiz, draft => {
  draft.quizlist[0].options[0].option = "LG트윈스";
});


p241
상태 컴포넌트 vs 비상태컴포넌트
-->
표현컴포넌트 vs 컨테이너컴포넌트



* import 'bootstrap/dist/css/bootstrap.css';



--------

ㅔ253
몇단계 안되면 그냥 지금 구조가 나은데.. 엄청 많으면 상태관리 아키텍처 flux 필요하다.. 라이브러리는 redux

ㅇ요즘은 매터리얼 UI 를 많이 쓴다.

상태부터 정리하자

키값.. 고유값 : shortid, uuid
