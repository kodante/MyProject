기존 앱을 redux로 바꾸는 작업을 했다
어차피 아래 자식 컴포넌트들은 기존의 props 를 받아서 하도록 수정하지 않았기 때문에 (app.js 이하)

루트에 있는 appContainer component 만 바꿨다.

src에 Constants를 만들었다. action을 정의할 때 오타를 줄일 수 있도록 constant 를 사용한다. action은 string 이다.
redux 폴더를 만들고 3개 파일을 만들었다
TodoReducer.js 에서
initial state 와 함께
기본 리듀서를 만들었다.
state와 action을 받았다. 하위 프로그램은 예전의 appContainer 에서 하던 것 그대로이긴 하나,
state값이 예전엔 this. 이었지만 그대로 사용하고, 인자로 받았던 props 대신 action.payload를 사용하였다
reducer는 만약 state가 바뀌지 않더라도 그 전 state를 그대로 리턴해야한다(주의!)

todoStore.js 에서는 만든 리듀서를 가지고 스토어를 만드는 것만 했다

todoActionCreator 에서는 액션들을 생성하도록 해주는데,
함수 리스트를 리턴하는데, 각 함수는 액션을 리턴하도록 해준다.
이 때 액션과 파라메터(payload)에 함수로 넘어온 값을 설정한다.



다시 AppContainer로 가서..









----------------------------------
다중 리듀서..




---------------------------------
4-4

리덕스를 쓰기 전에
State Tree 설계 --> Reducer 설계

데이터 설계가 중요하고...

- Component 설계
   : UI 시안을 보고 분할 설계
- Component 별 Data, Action 을 정의한다
   ==> 취합 ; State Tree를 만든다
       Action은 Reducer 로 설계 한다


리덕스 사가를.. 깨우쳤어요..
redux-promise 도 미들웨어를 알면 이해가 쉽다

* 한번더.. reducer는 순수함수이므로 절대로!! 비동기 처리를 하면 안된다.

